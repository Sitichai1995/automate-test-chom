1. หากต้องการ Design Test-case มี Technique อะไรบ้างที่สามารถช่วยให้การ Design Test-case เพื่อทดสอบระบบได้ครอบคลุม
- มีดังนี้
1. black box testing คือการทดสอบซอฟต์แวร์โดยไม่ยุ่งกับโค้ด ซึ่งมีเทคนิคคือ
1.1 Equivalance Partioning การแบ่งข้อมูลออกเป็นชุดย่อยๆลงเพื่อให้ง่ายขึ้น
1.2 Boundary Value Analysis วิเคราะห์การทำงานซอฟต์แวร์โดยการใส่ข้อมูลที่ยังอยู่ในขอบเขตของการทดสอบ
1.3 Decision Tables คือการสร้างตารางที่จะประกอบไปด้วยเงื่อนไขเพื่อดูว่าผลที่ได้สอดคล้องหรือไม่
1.4 state Transition testing ทดสอบการเปลี่ยน input ที่รับเข้ามา เพื่อดูถึงค่า output ที่แสดงออกมา
1.5 usecase testing การสร้าง test case ที่อ้างอิงจากปัญหาจากผู้ใช้เพื่อการทดสอบ เพื่อตวจสอบความถูกต้อง

2. White box testing คือการทดสอบซอฟต์แวร์โดยอาศัยความรู้เรื่องโค้ด โครงสร้างของซอฟต์แวร์มาช่วยในการทดสอบ

3. Experience-based test techniques คือการนำประสบการณ์มาใช้ในการสร้าง test case มีเทคนิคคือ
3.1 Exploratory Testing การสุ่มสำรวจปัญหาหรือความผิดพลาดของซอฟต์แวร์
3.2 Error Guessing สังเกตซอฟต์แวร์และใช้ความรู้ที่มีสร้าง test case ที่จะค้นหาข้อผิดพลาดได้
3.3 Checklist-based testing ใช้ลิสต์ที่การสร้างไว้ก่อนตรวจสอบประสิทธิภาพของการทดสอบ

------------------------------------------------------------------------------------

2.Design Test-case จากโจทย์ต่อไปนี้อย่างน้อย 5 Case พร้อมระบุ Technique ที่ใช้ข้อนั้น ๆ

[โจทย์] : ผู้ใช้ต้องการโอน Point จากบัญชีตัวเอง ไปยังบัญชีปลายทาง โดยเงื่อนไขคือ
ขั้นต่ำในการโอน Point คือ 100 / การทำรายการ
สูงสุดในการโอน Point คือ 3,000 / การทำรายการ
หากโอน < ขั้นต่ำ ระบบคิดค่า Fee 8 Point โดยบวกเพิ่มจากค่าที่กรอก
ต้องกรอก Passcode 4 หลัก ให้ถูกต้องจึงทำรายการสำเร็จ
บัญชีปลายทางต้องถูกต้อง จึงจะสามารถกรอก Passcode ได้

------------------------------------------------------------------------------------

3.หากทีมต้องการทดสอบ Feature ในข้อ 2 จะต้องมี Test Plan อย่างไร?

------------------------------------------------------------------------------------

4.Software Testing มีความสำคัญอย่างไรในการพัฒนาระบบ
- ตรวจสอบความผิดพลาดของระบบ
- ประหยัดค่าใช้จ่ายและเวลาโดยการค้นพบข้อผิดพลาดของระบบก่อนจะเป็นปัญหาใหญ่ในอนาคต
- ระบบมีความปลอดภัยมากขึ้นเพราะลดความเสี่ยงความผิดพลาดของระบบลง
- 